{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepararEventos.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","cheking","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogOut","dispatch","clear","logout","LoginScreen","useDispatch","logEmail","logPassword","formLoginValues","handleLoginInputChange","regName","regEmail","regPassword1","regPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","error","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"kMAEaA,EAEI,kBAFJA,EAGK,mBAHLA,EAMI,iDANJA,EAQI,kBARJA,EASO,qBATPA,EAUc,6BAVdA,EAWK,wBAXLA,EAYK,wBAZLA,EAaI,uBAbJA,EAgBW,qCAhBXA,EAkBE,eAlBFA,EAqBG,gBCrBVC,EAAe,CAEjBC,WAAU,G,yBCaRD,EAAe,CACjBE,OAAO,GACPC,YAAa,MChBXH,EAAe,CACjBI,UAAU,GCCDC,EAAcC,YAAgB,CACvCC,GHCqB,WAAiC,IAAhCC,EAA+B,uDAAxBR,EAAcS,EAAU,uCAErD,OAAQA,EAAOC,MAEX,KAAKX,EAEF,OAAO,2BACAS,GADP,IAEIP,WAAW,IAGlB,KAAKF,EAEF,OAAO,2BACAS,GADP,IAEIP,WAAW,IAGlB,QACI,OAAOO,IGnBfG,SFgB2B,WAAoC,IAAnCH,EAAkC,uDAA1BR,EAAeS,EAAW,uCAE9D,OAAQA,EAAOC,MAEX,KAAKX,EACD,OAAO,2BACDS,GADN,IAEGL,YAAaM,EAAOG,UAG3B,KAAKb,EACD,OAAO,2BACDS,GADN,IAEGN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAIlB,KAAKb,EACD,OAAO,2BACDS,GADN,IAEGL,YAAa,OAGpB,KAAKJ,EACD,OAAO,2BACDS,GADN,IAEGN,OAAQM,EAAMN,OAAOW,KACnB,SAAAC,GAAK,OAAKA,EAAMC,KAAON,EAAOG,QAAQG,GAAMN,EAAOG,QAAUE,OAKtE,KAAKf,EACD,OAAO,2BACDS,GADN,IAEGN,OAAQM,EAAMN,OAAOc,QACnB,SAAAF,GAAK,OAAKA,EAAMC,KAAOP,EAAML,YAAYY,MAE3CZ,YAAa,OAIpB,KAAKJ,EACD,OAAO,2BACDS,GADN,IAEGN,OAAO,YAAIO,EAAOG,WAIzB,KAAKb,EACD,OAAO,eACFC,GAGT,QACI,OAAOQ,IExEfS,KDCuB,WAAmC,IAAlCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCAErD,OAAQA,EAAOC,MAEX,KAAKX,EAED,8CACOS,GACAC,EAAOG,SAFd,IAGIR,UAAU,IAIlB,KAAKL,EAED,kCACOS,GADP,IAEIJ,UAAU,IAIlB,KAAKL,EAED,MAAM,CAEFmB,SAAQ,GAMhB,QACI,OAAOV,M,QEpCjBW,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YAEjBnB,EACAc,EACIM,YAAgBC,O,gBCRXC,EAAU,WAA0B,IAAxB3B,EAAuB,uDAAR,GAEpC,EAA4B4B,mBAAS5B,GAArC,mBAAO6B,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAW9B,IAITgC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,0CCpBlCK,EAASC,kDAETC,EAAgB,SAACC,EAAUC,GAAwB,IAAlBC,EAAiB,uDAAV,MAEpCC,EAAI,GAAD,OAAIN,EAAJ,YAAeG,GAExB,MAAa,QAAVE,EACQE,MAAMD,GAGNC,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAO3BQ,EAAgB,SAACT,EAAUC,GAAwB,IAAlBC,EAAiB,uDAAV,MAEpCC,EAAI,GAAD,OAAIN,EAAJ,YAAeG,GAClBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAa,QAAVV,EACQE,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,UAAWK,KAKZN,MAAMD,EAAI,CACbD,SACAG,QAAQ,CAEJ,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MC1CpBY,EAAgB,WAAgB,IAAflD,EAAc,uDAAL,GAEnC,OAAOA,EAAOW,KAAI,SAACwC,GAAD,mBAAC,eACZA,GADW,IAEdC,IAAKC,IAAOF,EAAEC,KAAKE,SACnBC,MAAOF,IAAOF,EAAEI,OAAOD,eC4BzBE,EAAc,SAAC5C,GAAD,MAAW,CAE3BJ,KAAMX,EACNa,QAASE,IAWA6C,EAAwB,iBAAM,CACvCjD,KAAMX,IAqBJ6D,EAAe,SAAC9C,GAAD,MAAW,CAC5BJ,KAAMX,EACNa,QAASE,IAyBP+C,EAAe,iBAAM,CAAEnD,KAAMX,IAmB7B+D,EAAc,SAAC5D,GAAD,MAAW,CAC3BQ,KAAMX,EACNa,QAASV,ICvCP6D,EAAiB,iBAAO,CAACrD,KAAMX,IAE/BiE,EAAQ,SAACC,GAAD,MAAS,CACnBvD,KAAMX,EACNa,QAASqD,IAGAC,EAAc,WACvB,OAAM,SAACC,GACHjB,aAAakB,QACbD,EDgCqC,CACzCzD,KAAMX,IChCFoE,EAASE,OAKXA,EAAS,iBAAK,CAChB3D,KAAMX,I,OCzFGuE,EAAc,WAEvB,IAAMH,EAAWI,cAEjB,EAAkD5C,EAAQ,CACtD6C,SAAU,gBACVC,YAAa,WAFjB,mBAAOC,EAAP,KAAwBC,EAAxB,KAKA,EAAwDhD,EAAQ,CAC5DiD,QAAS,UACTC,SAAU,gBACVC,aAAc,SACdC,aAAc,WAJlB,mBAAOC,EAAP,KAA2BC,EAA3B,KAOOT,EAAyBE,EAAzBF,SAAUC,EAAeC,EAAfD,YACTG,EAAiDI,EAAjDJ,QAASC,EAAwCG,EAAxCH,SAAUC,EAA8BE,EAA9BF,aAAcC,EAAgBC,EAAhBD,aAezC,OACI,qBAAKG,UAAU,6BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,yCAEA,uBAAMC,SAnBJ,SAAC9B,GDpBG,IAAC+B,EAAMC,ECqBzBhC,EAAEiC,iBACFnB,GDtBmBiB,ECsBCZ,EDtBKa,ECsBKZ,EDpBlC,uCAAO,WAAMN,GAAN,iBAAAoB,EAAA,sEAEgBjD,EAAc,OAAO,CAAC8C,QAAMC,YAAU,QAFtD,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5C,EAHH,QAMK6C,IAEJxC,aAAayC,QAAQ,QAAQ9C,EAAKI,OAClCC,aAAayC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAASH,EAAM,CACX8B,IAAKjD,EAAKiD,IACV5D,KAAMW,EAAKX,SAIf6D,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,SAjB9B,2CAAP,yDCqCgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIxE,KAAK,OACLwE,UAAU,eACVgB,YAAY,SACZhE,KAAK,WACLC,MAAOqC,EACP2B,SAAUxB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACIxE,KAAK,WACLwE,UAAU,eACVgB,YAAY,gBACZhE,KAAK,cACLC,MAAOsC,EACP0B,SAAUxB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACIxE,KAAK,SACLwE,UAAU,YACV/C,MAAM,kBAMtB,sBAAK+C,UAAU,yBAAf,UACI,0CACA,uBAAMC,SA/CC,SAAC9B,GDDC,IAACnB,EAAMkD,EAAOC,ECEnChC,EAAEiC,iBACCR,IAAeC,GACdgB,IAAKC,KAAK,QAAS,sCAAmC,SAE1D7B,GDNsBjC,ECMC0C,EDNKQ,ECMIP,EDNGQ,ECMOP,EDJ9C,uCAAO,WAAMX,GAAN,iBAAAoB,EAAA,sEAEgBjD,EAAc,gBAAgB,CAAE8C,QAAMC,WAAUnD,QAAM,QAFtE,cAEGsD,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5C,EAHH,QAMK6C,IAEJxC,aAAayC,QAAQ,QAAQ9C,EAAKI,OAClCC,aAAayC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAASH,EAAM,CACX8B,IAAKjD,EAAKiD,IACV5D,KAAMW,EAAKX,SAIf6D,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,SAjB9B,2CAAP,yDC8CgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIxE,KAAK,OACLwE,UAAU,eACVgB,YAAY,SACZhE,KAAK,UACLC,MAAOyC,EACPuB,SAAUlB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,QACLwE,UAAU,eACVgB,YAAY,SACZhE,KAAK,WACLC,MAAO0C,EACPsB,SAAUlB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,WACLwE,UAAU,eACVgB,YAAY,gBACZhE,KAAK,eACLC,MAAO2C,EACPqB,SAAUlB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,WACLwE,UAAU,eACVgB,YAAY,0BACZhE,KAAK,eACLC,MAAO4C,EACPoB,SAAUlB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,SACLwE,UAAU,YACV/C,MAAM,+BC1HzBiE,GAAS,WAElB,IAAOlE,EAAQmE,aAAY,SAAA7F,GAAK,OAAIA,EAAMS,QAAnCiB,KACDiC,EAAWI,cAMjB,OACI,sBAAKW,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKhD,IAGL,yBAAQgD,UAAU,yBACVoB,QAXK,WACjBnC,EAASD,MASL,UAEI,mBAAGgB,UAAU,wBACb,iD,SCtBHqB,GAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNnG,MAAO,SACPoG,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXNC,GAAgB,SAAC,GAAe,IAAbvG,EAAY,EAAZA,MAEpBwG,EAAgBxG,EAAhBwG,MAAOrD,EAASnD,EAATmD,KAEf,OACI,gCACI,uCAAWqD,EAAX,OACA,sCAAUrD,EAAK/B,KAAf,W,wCCNCqF,GAAc,iBAAM,CAAE7G,KAAMX,ICSnCyH,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,KAAMC,cAAc,SAEpB,IAAMC,GAAO3E,MAAS4E,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC5CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAE,SAE7BG,GAAY,CACdlB,MAAM,GACNmB,MAAM,GACNhF,MAAOyE,GAAI1E,SACXF,IAAKgF,GAAS9E,UAGLkF,GAAgB,WAEzB,IAAMvE,EAAWI,cACVtE,EAAaoG,aAAY,SAAA7F,GAAK,OAAIA,EAAMD,MAAxCN,UACAE,EAAekG,aAAY,SAAA7F,GAAK,OAAIA,EAAMG,YAA1CR,YAEP,EAAkCyB,mBAASsG,GAAI1E,UAA/C,mBAAOmF,EAAP,KAAkBC,EAAlB,KACA,EAA8BhH,mBAAS0G,GAAS9E,UAAhD,mBAAOqF,EAAP,KAAgBC,EAAhB,KACA,EAAoClH,oBAAS,GAA7C,mBAAOmH,EAAP,KAAmBC,EAAnB,KAEA,EAAoCpH,mBAAS4G,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEOT,EAA4BQ,EAA5BR,MAAOnB,EAAqB2B,EAArB3B,MAAO7D,EAAcwF,EAAdxF,MAAOH,EAAO2F,EAAP3F,IAE5B6F,qBAAU,WAGFD,EADD/I,GAIeqI,MAGnB,CAACrI,EAAa+I,IAEjB,IAAMlH,EAAoB,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAExBiH,EAAc,2BACPD,GADM,kBAERhH,EAAOC,KAAOD,EAAOE,UAoDxBiH,EAAY,SAAC/F,GAEfc,EDjH0B,CAAEzD,KAAMX,ICkHlCoE,EAASR,KACTuF,EAAcV,KAGlB,OACK,eAAC,KAAD,CACOa,OAAQpJ,EAERqJ,eAAgBF,EAChBG,MAAO/B,GACPgC,eAAiB,IACjBtE,UAAU,QACVuE,iBAAiB,cAPxB,UASO,mCAAOtJ,EAAe,gBAAkB,eAAxC,OACA,uBACA,uBAAM+E,UAAU,YACRC,SAnDK,SAAC9B,GACtBA,EAAEiC,iBACF,IPlCyBxE,EOkCnB4I,EAAcnG,IAAOE,GACrBkG,EAAYpG,IAAOD,GAEzB,OAAGoG,EAAYE,cAAcD,GACnB5D,IAAKC,KAAK,QAAQ,gEAGzBsB,EAAMuC,OAAOC,OAAS,EACdd,GAAc,IAIrB7E,EADDhE,GP7CsBW,EO8CKmI,EP7ClC,uCAAO,WAAM9E,GAAN,iBAAAoB,EAAA,+EAEoBvC,EAAc,UAAD,OAAWlC,EAAMC,IAAKD,EAAM,OAF7D,cAEO0E,EAFP,gBAGoBA,EAAKC,OAHzB,QAGO5C,EAHP,QAKS6C,GACJvB,EAASP,EAAa9C,IAEtBiF,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,SARlC,kDAYC8D,QAAQC,IAAR,MAZD,0DAAP,uDA/C4B,SAAClJ,GAE7B,IACI,8CAAO,WAAMqD,EAAU8F,GAAhB,uBAAA1E,EAAA,+DAEU0E,IAAWhJ,KAArB6E,EAFA,EAEAA,IAAI5D,EAFJ,EAEIA,KAFJ,SAGYc,EAAc,SAASlC,EAAM,QAHzC,cAGD0E,EAHC,gBAIYA,EAAKC,OAJjB,OAID5C,EAJC,OAKHkH,QAAQC,IAAInH,GACbA,IACC/B,EAAMC,GAAG8B,EAAKqH,OAAOnJ,GAErBD,EAAMmD,KAAK,CACPkG,IAAIrE,EACJ5D,KAAKA,GAGTiC,EAAST,EAAY5C,KAdlB,2CAAP,wDAkBF,MAAOsJ,GACLL,QAAQC,IAAII,IO0ECC,CAAiBpB,IAE9BD,GAAc,QAEdI,MA4BQ,UAGI,qBAAKlE,UAAU,aAAf,SACI,cAAC,KAAD,CACIiB,SAxEM,SAAC9C,GAC5BuF,EAAavF,GAEb6F,EAAc,2BACPD,GADM,IAETxF,MAAOJ,MAoEUlB,MAAOwG,EACPzD,UAAU,mBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACIiB,SAxEI,SAAC9C,GAC1ByF,EAAWzF,GACX6F,EAAc,2BACPD,GADM,IAET3F,IAAKD,MAqEYlB,MAAO0G,EACPyB,QAAS3B,EACTzD,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACIxE,KAAK,OACLwE,UAAS,wBAAmB6D,GAAc,cAC1C7C,YAAY,uBACZhE,KAAK,QACLqI,aAAa,MACbpI,MAAOmF,EACPnB,SAAUnE,IAEd,uBAAOjB,GAAG,YAAYmE,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACIxE,KAAK,OACLwE,UAAU,eACVgB,YAAY,QACZsE,KAAK,IACLtI,KAAK,QACLC,MAAOsG,EACPtC,SAAUnE,IAEd,uBAAOjB,GAAG,YAAYmE,UAAU,uBAAhC,yCAGJ,yBACIxE,KAAK,SACLwE,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCzLXuF,I,cAAY,WAErB,IAAMtG,EAAWI,cAMjB,OACI,wBACIW,UAAU,sBACVoB,QAPe,WACnBnC,EAASoD,OAIT,SAII,mBAAGrC,UAAY,oBCbdwF,GAAiB,WAE1B,IAAMvG,EAAWI,cAMjB,OACI,yBACIW,UAAU,4BACVoB,QAPa,WACjBnC,ETqEJ,uCAAO,WAAOA,EAAU8F,GAAjB,mBAAA1E,EAAA,6DAEIxE,EAAMkJ,IAAWtJ,SAASR,YAA1BY,GAFJ,kBAKoBiC,EAAc,UAAD,OAAWjC,GAAK,GAAG,UALpD,cAKOyE,EALP,gBAMoBA,EAAKC,OANzB,QAMO5C,EANP,QAQS6C,GACJvB,EAASN,KAETkC,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,SAXlC,kDAeC8D,QAAQC,IAAR,MAfD,0DAAP,0DSjEI,UAGK,mBAAG9E,UAAU,iBACb,qDCDb3B,IAAOoH,OAAO,MACd,IAAMC,GAAYC,aAAgBtH,KAgBrBuH,GAAiB,WAE1B,IAAM3G,EAAWI,cACjB,EAA8B8B,aAAY,SAAA7F,GAAK,OAAIA,EAAMG,YAAlDT,EAAP,EAAOA,OAAQC,EAAf,EAAeA,YACR2F,EAAOO,aAAY,SAAA7F,GAAK,OAAIA,EAAMS,QAAlC6E,IAEP,EAAgClE,mBAAUsB,aAAaC,QAAQ,aAAe,SAA9E,mBAAO4H,EAAP,KAAiBC,EAAjB,KAEA7B,qBAAU,WACNhF,EV4DJ,uCAAO,WAAMA,GAAN,mBAAAoB,EAAA,+EAEmBvC,EAAc,UAFjC,cAEOwC,EAFP,gBAGmBA,EAAKC,OAHxB,OAGO5C,EAHP,OAKO3C,EAASkD,EAAcP,EAAKoI,SAElC9G,EAASL,EAAY5D,IAPtB,kDAUC6J,QAAQC,IAAR,MAVD,0DAAP,yDU1DG,CAAC7F,IAoCJ,OACI,sBAAKe,UAAU,kBAAf,UACG,cAAC,GAAD,IAEC,cAAC,KAAD,CACI0F,UAAYA,GACZ1K,OAASA,EACTgL,cAAc,QACdC,YAAY,MACZ5E,SAAWA,GACX6E,gBAzBa,SAACtK,EAAO2C,EAAOH,EAAK+H,GAUzC,MAAO,CACH9B,MATU,CACV+B,gBAAkBxF,IAAQhF,EAAMmD,KAAKkG,IAAO,UAAW,UACvDoB,aAAc,MACdC,QAAS,GACTC,QAAQ,QACRC,MAAO,WAmBHC,mBA5CU,SAACtI,GACnBc,EAASoD,OA4CDqE,cAzCU,SAACvI,GACnBc,EVViC,CAErCzD,KAAMX,EACNa,QUO4ByC,KAyChBwI,OArCS,SAACxI,GAClB2H,EAAY3H,GACZH,aAAayC,QAAQ,WAAYtC,IAoCzByI,aAjCS,SAACzI,GAClBc,EAASR,MAiCDoI,YAAY,EACZC,KAAMjB,EACNkB,WAAY,CACRnL,MAAOuG,MAIV,cAAC,GAAD,IAGIlH,GAAgB,cAAC,GAAD,IAGrB,cAAC,GAAD,Q,qDCtGH+L,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,cAAC,KAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,cAAC,KAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAgBG,S,mCCX3BE,GAAe,SAAC,GAItB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,cAAC,KAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,cAACC,EAAD,eAAgBG,IAChB,cAAC,KAAD,CAAUC,GAAG,gB,SCHxBE,GAAY,WAErB,IAAMvI,EAAWI,cACjB,EAAwB8B,aAAY,SAAA7F,GAAK,OAAIA,EAAMS,QAA5Cb,EAAP,EAAOA,SAAU0F,EAAjB,EAAiBA,IAQjB,OANAqD,qBAAU,WAENhF,EZoCJ,uCAAO,WAAMA,GAAN,iBAAAoB,EAAA,sEAEgBvC,EAAc,cAF9B,cAEGwC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5C,EAHH,QAMK6C,IAEJxC,aAAayC,QAAQ,QAAQ9C,EAAKI,OAClCC,aAAayC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAASH,EAAM,CACX8B,IAAKjD,EAAKiD,IACV5D,KAAMW,EAAKX,SAKfiC,EAASJ,KAlBV,2CAAP,yDYlCG,CAACI,IAED/D,EACS,sDAKR,cAAC,KAAD,UACQ,8BACI,eAAC,KAAD,WACI,cAAC,GAAD,CACIuM,OAAK,EAACC,KAAK,SACXP,UAAW/H,EACX6H,kBAAmBrG,IAIvB,cAAC,GAAD,CACI6G,OAAK,EAACC,KAAK,IACXP,UAAWvB,GACXqB,kBAAmBrG,IAGvB,cAAC,KAAD,CAAU0G,GAAG,cC1CxBK,GAAc,WACvB,OAEI,cAAC,IAAD,CAAUtL,MAAOA,EAAjB,SACI,cAAC,GAAD,O,OCJZwI,QAAQC,IAAI3H,wMAEZyK,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ad508783.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartNew: '[event] Start add new',\r\n    eventLogOut: '[event] Cleaning calendar state when logs out.',\r\n    \r\n    eventAddNew: '[event] Add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event Loaded',\r\n\r\n   \r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from './../types/types';\r\n\r\nconst initialState = {\r\n\r\n    modalOpen:false\r\n}\r\n\r\nexport const uiReducer = (state= initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiOpenModal:\r\n\r\n           return {\r\n               ...state,\r\n               modalOpen: true\r\n           }\r\n\r\n        case types.uiCloseModal:\r\n\r\n           return {\r\n               ...state,\r\n               modalOpen: false\r\n           }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import moment from 'moment';\r\nimport { types } from './../types/types';\r\n\r\n\r\n// {\r\n//     id: \"asdwqeqw2518q\",\r\n//     title: 'Cumpleaños',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Reservar Cancha',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Javier'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events:[],\r\n    activeEvent: null\r\n\r\n}\r\n\r\nexport const calendarReducer = (state = initialState , action ) =>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n               ...state,\r\n               activeEvent: action.payload\r\n           }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n               ...state,\r\n               events:[\r\n                   ...state.events,\r\n                   action.payload\r\n               ]\r\n           }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n               ...state,\r\n               activeEvent: null\r\n           }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n               ...state,\r\n               events: state.events.map(\r\n                 event => (event.id === action.payload.id) ? action.payload : event\r\n               )\r\n               \r\n           }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n               ...state,\r\n               events: state.events.filter(\r\n                 event => (event.id !== state.activeEvent.id)\r\n               ),\r\n               activeEvent: null\r\n               \r\n           }\r\n        \r\n        case types.eventLoaded:\r\n            return {\r\n               ...state,\r\n               events:[...action.payload]\r\n               \r\n           }\r\n        \r\n        case types.eventLogOut:\r\n            return {\r\n              ...initialState\r\n           }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { types } from './../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid:null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n        switch (action.type) {\r\n\r\n            case types.authLogin:\r\n\r\n                return{\r\n                    ...state,\r\n                    ...action.payload,\r\n                    checking: false\r\n\r\n                }\r\n            \r\n            case types.authCheckingFinish:\r\n\r\n                return{\r\n                    ...state,\r\n                    checking: false\r\n                \r\n                }\r\n\r\n            case types.authLogout:\r\n\r\n                return{\r\n                    \r\n                    cheking:false\r\n                }\r\n\r\n            \r\n               \r\n        \r\n            default:\r\n                return state;\r\n        }\r\n}","import {combineReducers} from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport { rootReducer } from './../reducers/rootReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    \r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    \r\n);","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nconst baseUrl= process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method='GET') => {\r\n\r\n    const url=`${baseUrl}/${endpoint}`;\r\n\r\n    if(method ==='GET'){\r\n        return fetch(url);\r\n\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n    \r\n\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') => {\r\n\r\n    const url=`${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || ''; // devuelve un string vacio en caso de null.\r\n\r\n    if(method ==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                \r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n    \r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = [])=>{\r\n\r\n    return events.map((e)=>({\r\n        ...e,\r\n        end: moment(e.end).toDate(), //pasa el string a objeto date.\r\n        start: moment(e.start).toDate()\r\n     })\r\n    );\r\n}","import { fetchConToken } from '../helpers/fetch';\r\nimport { types } from './../types/types';\r\nimport { prepareEvents } from './../helpers/prepararEventos';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n\r\n    try {\r\n        return async(dispatch, getState) =>{\r\n\r\n        const {uid,name}=getState().auth;\r\n        const resp = await fetchConToken('events',event,'POST');\r\n        const body = await resp.json();\r\n            console.log(body)\r\n        if(body){\r\n            event.id=body.evento.id;\r\n\r\n            event.user={\r\n                _id:uid,\r\n                name:name\r\n\r\n            }\r\n            dispatch(eventAddNew(event));\r\n        }\r\n    }\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    \r\n\r\n};\r\n\r\nconst eventAddNew = (event) =>({\r\n\r\n    type: types.eventAddNew,\r\n    payload: event\r\n\r\n});\r\n\r\nexport const eventSetActive = (event) =>({\r\n\r\n    type: types.eventSetActive,\r\n    payload: event\r\n\r\n});\r\n\r\nexport const eventClearActiveEvent = () =>({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () =>{\r\n    return async (dispatch, getState)=>{\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () =>({ type: types.eventDeleted });\r\n\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp= await fetchConToken('events'); //realiza una peticion GET por defecto.\r\n            const body= await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events)=>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const clearCalendarStatelogout = ()=>({\r\n    type: types.eventLogOut\r\n}); //no necesita ser asincrono ya que solo limpia lo que hay alojado en el store/reducer.\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from './../types/types';\r\nimport { clearCalendarStatelogout } from './events';\r\n\r\n\r\n\r\nexport const startLogin = (email,password) =>{\r\n\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchSinToken('auth',{email,password},'POST');\r\n        const body = await resp.json();\r\n \r\n\r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) =>{\r\n\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchSinToken('auth/register',{ email,password, name},'POST');\r\n        const body = await resp.json();\r\n \r\n      \r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheckingToken = () =>{\r\n\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n \r\n       \r\n        if(body.ok){\r\n\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            //Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst login = (user)=>({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogOut = ()=>{\r\n    return(dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(clearCalendarStatelogout());\r\n        dispatch(logout());\r\n       \r\n    }\r\n};\r\n\r\nconst logout = ()=>({\r\n    type: types.authLogout\r\n});\r\n\r\n\r\n\r\n","import React from 'react';\r\n//import './login.css';\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from './../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        logEmail: 'sjj@gmail.com',\r\n        logPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        regName: 'Peaches',\r\n        regEmail: 'sjj@gmail.com',\r\n        regPassword1: '123456',\r\n        regPassword2: '123456'\r\n    });\r\n\r\n    const {logEmail, logPassword} = formLoginValues;\r\n    const { regName, regEmail, regPassword1, regPassword2} = formRegisterValues;\r\n\r\n    const handleLogin=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(logEmail, logPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(regPassword1!==regPassword2){\r\n            Swal.fire('Error', 'Las constraseñas deben coincidir','error');\r\n        }\r\n        dispatch(startRegister(regName, regEmail, regPassword1));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login__container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login__form-1\">\r\n                    <h3>Ingreso</h3>\r\n\r\n                    <form onSubmit= {handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"logEmail\"\r\n                                value={logEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"logPassword\"\r\n                                value={logPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login__form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"regName\"\r\n                                value={regName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"regEmail\"\r\n                                value={regEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"regPassword1\"\r\n                                value={regPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"regPassword2\"\r\n                                value={regPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogOut } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogOut = () =>{\r\n        dispatch(startLogOut());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\"\r\n                    onClick={handleLogOut}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from './../types/types';\r\n\r\n\r\nexport const uiOpenModal = () =>({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () =>({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal} from './../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from './../../actions/events';\r\n\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now =  moment().minutes(0).seconds(0).add(1,'hours'); // moment simplifica trabajar con new Date\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}//fuera de CalendarModal para que la constante no vuelva a reconstruirse cada vez que vuelve a renderizarse el componente.\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    \r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) =>{\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) =>{\r\n       setDateStart(e);\r\n\r\n       setFormValues({\r\n           ...formValues,\r\n           start: e\r\n       });\r\n    }\r\n\r\n    const handleEndDateChange = (e) =>{\r\n       setDateEnd(e);\r\n       setFormValues({\r\n           ...formValues,\r\n           end: e\r\n       });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n           return Swal.fire('Error','La fecha de finalización debe ser mayor que la de inicio.');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n\r\n        }else{\r\n\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        setTitleValid(true);\r\n\r\n        closeModal();\r\n    }\r\n    \r\n    \r\n    const openModal =(e) =>{\r\n       \r\n       // dispatch(uiOpenModal());\r\n    }\r\n\r\n    const closeModal =(e) =>{\r\n       \r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    return (\r\n         <Modal\r\n                isOpen={modalOpen}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS= {200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n                <hr />\r\n                <form className=\"container\"\r\n                        onSubmit={handleSubmitForm}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={dateEnd}\r\n                            minDate={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n          </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}>\r\n\r\n            <i className = \"fas fa-plus\"></i>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {eventStartDelete } from './../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}>\r\n             <i className=\"fas fa-trash\"></i>\r\n             <span>Borrar Evento</span>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { messages } from './../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from './../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from './../../actions/events';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNewFab } from './../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n// const events = [{\r\n\r\n//     title: 'Cumpleaños',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Reservar Cancha',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Javier'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n    \r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n        \r\n    }, [dispatch])\r\n    \r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) =>{\r\n        dispatch(eventSetActive(e));\r\n       \r\n    }\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7': '#467600',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display:'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n           <Navbar />\r\n\r\n            <Calendar\r\n                localizer= {localizer}\r\n                events= {events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages= {messages}\r\n                eventPropGetter= {eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent //referencia al componente que se va a utilizar en el evento.\r\n                }}\r\n                />\r\n                \r\n                 <AddNewFab />\r\n                \r\n                {\r\n                    (activeEvent) && <DeleteEventFab />\r\n                }\r\n                \r\n                <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { LoginScreen } from './../components/auth/LoginScreen';\r\nimport { CalendarScreen } from './../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startCheckingToken } from './../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n       \r\n        dispatch(startCheckingToken());\r\n\r\n    }, [dispatch]);\r\n\r\n    if(checking){\r\n        return (<h5>Por favor, espere...</h5>);\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact path=\"/login\"  \r\n                            component={LoginScreen}\r\n                            isAuthenticated={!!uid} // !! convierte al string en un booleano para comprobar que uid no sea null.\r\n\r\n                            />\r\n\r\n                        <PrivateRoute \r\n                            exact path=\"/\"\r\n                            component={CalendarScreen}\r\n                            isAuthenticated={!!uid}\r\n                            />\r\n\r\n                        <Redirect to=\"/\" />\r\n\r\n                    </Switch>\r\n\r\n                    \r\n                </div>\r\n        </Router>\r\n         \r\n   \r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        \r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport  './styles/styles.scss';\n\nconsole.log(process.env)\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}